{"version":3,"sources":["../../src/api/index.js"],"names":["router","HostCtrl","HostController","get","_req","res","status","json","data","getHostsApps","req","getTopAppsByHost","params","host","removeAppFromHosts","id","message","getAppsWithHosts","post","addAppToHosts","body"],"mappings":";;;;;;;AAAA;;AACA;;;;eAEgB,YAAM;AAClB,MAAMA,MAAM,GAAG,sBAAf;AACA,MAAMC,QAAQ,GAAG,IAAIC,aAAJ,EAAjB;AAEAF,EAAAA,MAAM,CAACG,GAAP,CAAW,MAAX,EAAmB,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC9BA,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,QAAQ,CAACO,IAA9B;AACH,GAFD;AAIAR,EAAAA,MAAM,CAACG,GAAP,CAAW,QAAX,EAAqB,UAACC,IAAD,EAAOC,GAAP,EAAe;AAChCA,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,QAAQ,CAACQ,YAAT,EAArB;AACH,GAFD;AAIAT,EAAAA,MAAM,CAACG,GAAP,CAAW,cAAX,EAA2B,UAACO,GAAD,EAAML,GAAN,EAAc;AACrCA,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,QAAQ,CAACU,gBAAT,CAA0BD,GAAG,CAACE,MAAJ,CAAWC,IAArC,CAArB;AACH,GAFD;AAIAb,EAAAA,MAAM,CAACG,GAAP,CAAW,mBAAX,EAAgC,UAACO,GAAD,EAAML,GAAN,EAAc;AAC1C,QAAMG,IAAI,GAAGP,QAAQ,CAACa,kBAAT,CAA4BJ,GAAG,CAACE,MAAJ,CAAWG,EAAvC,CAAb;;AACA,QAAIP,IAAJ,EAAU;AACN,aAAOH,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBC,IAArB,CAAP;AACH;;AACD,WAAOH,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AACxBS,MAAAA,OAAO,yBAAkBN,GAAG,CAACE,MAAJ,CAAWG,EAA7B;AADiB,KAArB,CAAP;AAGH,GARD;AAUAf,EAAAA,MAAM,CAACG,GAAP,CAAW,OAAX,EAAoB,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC/BA,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,QAAQ,CAACgB,gBAAT,EAArB;AACH,GAFD;AAIAjB,EAAAA,MAAM,CAACkB,IAAP,CAAY,OAAZ,EAAqB,UAACR,GAAD,EAAML,GAAN,EAAc;AAC/BA,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,QAAQ,CAACkB,aAAT,CAAuBT,GAAG,CAACU,IAA3B,CAArB;AACH,GAFD;AAIA,SAAOpB,MAAP;AACH,CAnCc,E","sourcesContent":["import { Router } from 'express';\nimport HostController from './controllers/Host';\n\nexport default (() => {\n    const router = Router();\n    const HostCtrl = new HostController();\n\n    router.get('/all', (_req, res) => {\n        res.status(200).json(HostCtrl.data);\n    });\n\n    router.get('/hosts', (_req, res) => {\n        res.status(200).json(HostCtrl.getHostsApps());\n    });\n\n    router.get('/hosts/:host', (req, res) => {\n        res.status(200).json(HostCtrl.getTopAppsByHost(req.params.host));\n    });\n\n    router.get('/hosts/remove/:id', (req, res) => {\n        const data = HostCtrl.removeAppFromHosts(req.params.id);\n        if (data) {\n            return res.status(200).json(data);\n        }\n        return res.status(404).json({\n            message: `Apps with id ${req.params.id} not exists.`\n        });\n    });\n\n    router.get('/apps', (_req, res) => {\n        res.status(200).json(HostCtrl.getAppsWithHosts());\n    });\n\n    router.post('/apps', (req, res) => {\n        res.status(200).json(HostCtrl.addAppToHosts(req.body));\n    });\n\n    return router;\n})();\n"],"file":"index.js"}